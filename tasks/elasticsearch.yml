- name: Adds repository key
  apt_key:
    url: '{{ elasticsearch_repo_key }}'
    state: present

- name: Adds repos
  apt_repository:
    repo: "{{ elasticsearch_repo_path }}"

- name: Installs elasticsearch
  apt:
    pkg: elasticsearch
    state: present
  notify: Start elasticsearch

- name: Enables elasticsearch at boot
  service:
    name: elasticsearch
    enabled: yes

    #- name: Adds plugins
    #  elasticsearch_plugin:
    #    state: present
    #    name: "{{ item }}"
    #    plugin_bin: /usr/share/elasticsearch/bin/elasticsearch-plugin
    #  with_items: elasticsearch_plugins
    #  notify: Restart elasticsearch
    #  tags: elasticsearch:plugins

- name: Adds pip
  apt:
    pkg: python-pip

- name: Adds curator
  pip:
    name: elasticsearch-curator

- name: Adds elasticsearch config
  template:
    src: elasticsearch.yml.j2
    dest: "{{ elasticsearch_path_conf }}/elasticsearch.yml"
  tags: elasticsearch:config
  notify: Restart elasticsearch

- name: Adds elasticsearch JVM options
  template:
    src: jvm.options.j2
    dest: "/etc/elasticsearch/jvm.options"
  tags: elasticsearch:config
  notify: Restart elasticsearch

- name: Adds es-snapper
  copy:
    src: es-snapper
    dest: /usr/local/bin/es-snapper
    mode: 0755
  tags: "elasticsearch:snapshots"

- name: Adds datadog config
  template:
    src: elasticsearch_datadog.yml.j2
    dest: /etc/dd-agent/conf.d/elastic.yaml
    mode: 0644
  when: datadog_enabled is defined and datadog_enabled
  notify: Restart datadog-agent

- name: Adds ferm filtering
  template:
    src: "../templates/ferm.j2"
    dest: /etc/ferm/filter-input.d/60_elasticsearch.conf
  when: ferm_enabled
  tags: 
    - ferm
    - elasticsearch:ferm
  notify: Restart ferm


# Doesn't work, God knows why
# - name: Ensure elasticsearch is started
#   service: name=elasticsearch state=started

# - name: Ensure httplib is present
#   apt: pkg=python-httplib2 state=present
#   tags: foo
#
# - set_fact:
#     __es_base_url: "http://{{ hostvars[inventory_hostname]['ansible_' + elasticsearch_network_publish_interface].ipv4.address }}:{{ elasticsearch_http_port }}"
#   tags: foo
#
# - name: Check if elasticsearch_snapshot_s3_repo is present
#   uri:
#     url: "{{ __es_base_url }}/_snapshot/{{ elasticsearch_snapshot_s3_repo }}"
#     status_code: 200,404
#   run_once: true
#   register: __es_snap_repo
#   always_run: true
#   tags: foo

# - set_fact:
#     what:
#       type: "s3"
#       settings:
#         bucket: "{{ elasticsearch_snapshot_s3_bucket }}"
#   tags: foo

# - debug: var=what
#   tags: foo

# - debug: msg="{{ what | to_json }}"
#   tags: foo

# - name: Creates repository
#   uri:
#     url: "{{ __es_base_url }}/_snapshot/{{ elasticsearch_snapshot_s3_repo }}"
#     method: PUT
#     body_format: raw
#     body: "{{what}}"
#   run_once: true
#   when: __es_snap_repo.status == 404
#   tags: foo

